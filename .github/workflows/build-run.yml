name: Central Test Suite Workflow
on:
  repository_dispatch:
    types: [test-suite-trigger]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Clone, checkout, and build image in one step to streamline the workflow
      - name: Prepare and Build Docker Image with Tests
        env:
          REPO_NAME: ${{ github.event.client_payload.repo_name }}
          PR_NUMBER: ${{ github.event.client_payload.pull_number }}
        run: |
          git clone https://github.com/${REPO_NAME}.git ./TeamA
          git -C ./TeamA fetch origin pull/${PR_NUMBER}/head:pr-branch
          git -C ./TeamA checkout pr-branch
          docker build --no-cache -t cts-test-image:pr-${PR_NUMBER} --build-arg TESTS_DIR=./TeamA/tests .
      
      # Run tests and capture results in one step
      - name: Run Tests and Capture Results
        run: |
          docker run --name cts-test-container cts-test-image:pr-${PR_NUMBER}
          mkdir artifacts
          docker cp cts-test-container:/path/to/results.txt artifacts/results.txt
          echo "Test results captured."
      
      # Upload artifact using previously captured results
      - name: Upload Test Results Artifact
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ github.event.client_payload.repo_name }}-pr-${{ github.event.client_payload.pull_number }}
          path: artifacts/results.txt

      # Add a cleanup step to ensure that Docker artifacts don't persist unnecessarily
      - name: Cleanup Docker
        if: always()
        run: |
          docker rm cts-test-container
          docker rmi cts-test-image:pr-${PR_NUMBER}
        continue-on-error: true
